{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BotCollection from './component/BotCollection';\nimport YourBotArmy from './component/YourBotArmy';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/bots').then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n  }, []);\n  const enlistBot = bot => {\n    if (!enlistedBots.some(b => b.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n  const releaseBot = bot => {\n    setEnlistedBots(enlistedBots.filter(b => b.id !== bot.id));\n  };\n  const dischargeBot = bot => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setEnlistedBots(enlistedBots.filter(b => b.id !== bot.id));\n      setBots(bots.filter(b => b.id !== bot.id));\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      onEnlist: enlistBot,\n      onDischarge: dischargeBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: enlistedBots,\n      onRelease: releaseBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","fetch","then","response","json","data","console","log","catch","error","enlistBot","bot","some","b","id","releaseBot","filter","dischargeBot","method","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onEnlist","onDischarge","onRelease","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BotCollection from './component/BotCollection';\nimport YourBotArmy from './component/YourBotArmy';\nimport './App.css';\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/bots')\n      .then(response => response.json())\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const enlistBot = (bot) => {\n    if (!enlistedBots.some(b => b.id === bot.id)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  };\n\n  const releaseBot = (bot) => {\n    setEnlistedBots(enlistedBots.filter(b => b.id !== bot.id));\n  };\n\n  const dischargeBot = (bot) => {\n    fetch(`http://localhost:8001/bots/${bot.id}`, { method: 'DELETE' })\n      .then(() => {\n        setEnlistedBots(enlistedBots.filter(b => b.id !== bot.id));\n        setBots(bots.filter(b => b.id !== bot.id));\n      })\n      .catch(error => console.error(error));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Bot Army</h1>\n      <BotCollection bots={bots} onEnlist={enlistBot} onDischarge={dischargeBot} />\n      <YourBotArmy bots={enlistedBots} onRelease={releaseBot} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,2BAA2B;AACrD,OAAOC,WAAW,MAAM,yBAAyB;AACjD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdW,KAAK,CAAC,4BAA4B,CAAC,CAChCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAC/BG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAIC,GAAG,IAAK;IACzB,IAAI,CAACZ,YAAY,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,EAAE;MAC5Cd,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEY,GAAG,CAAC,CAAC;IACzC;EACF,CAAC;EAED,MAAMI,UAAU,GAAIJ,GAAG,IAAK;IAC1BX,eAAe,CAACD,YAAY,CAACiB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMG,YAAY,GAAIN,GAAG,IAAK;IAC5BV,KAAK,CAAE,8BAA6BU,GAAG,CAACG,EAAG,EAAC,EAAE;MAAEI,MAAM,EAAE;IAAS,CAAC,CAAC,CAChEhB,IAAI,CAAC,MAAM;MACVF,eAAe,CAACD,YAAY,CAACiB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;MAC1DhB,OAAO,CAACD,IAAI,CAACmB,MAAM,CAACH,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,GAAG,CAACG,EAAE,CAAC,CAAC;IAC5C,CAAC,CAAC,CACDN,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC;EAED,oBACEf,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjB9B,OAAA,CAACH,aAAa;MAACM,IAAI,EAAEA,IAAK;MAAC4B,QAAQ,EAAEf,SAAU;MAACgB,WAAW,EAAET;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7E9B,OAAA,CAACF,WAAW;MAACK,IAAI,EAAEE,YAAa;MAAC4B,SAAS,EAAEZ;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC5B,EAAA,CArCQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
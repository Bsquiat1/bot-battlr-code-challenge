{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Bot from './components/Bot';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('/api/bots');\n        const data = await response.json();\n        setBots(data.bots);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchBots();\n  }, []);\n  function enlistBot(bot) {\n    if (!enlistedBots.includes(bot)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  }\n  function releaseBot(bot) {\n    setEnlistedBots(enlistedBots.filter(enlistedBot => enlistedBot !== bot));\n  }\n  async function dischargeBot(bot) {\n    try {\n      await fetch(`/api/bots/${bot.id}`, {\n        method: 'DELETE'\n      });\n      setBots(bots.filter(currentBot => currentBot !== bot));\n      setEnlistedBots(enlistedBots.filter(enlistedBot => enlistedBot !== bot));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bot Army\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bot-collection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Bot Collection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n        bots: bots,\n        enlistBot: enlistBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"your-bot-army-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Bot Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YourBotArmy, {\n        enlistedBots: enlistedBots,\n        releaseBot: releaseBot,\n        dischargeBot: dischargeBot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mePyinjWmuGOqgLLJcRecJpTmIw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Bot","BotCollection","YourBotArmy","jsxDEV","_jsxDEV","App","_s","bots","setBots","enlistedBots","setEnlistedBots","fetchBots","response","fetch","data","json","error","console","log","enlistBot","bot","includes","releaseBot","filter","enlistedBot","dischargeBot","id","method","currentBot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Bot from './components/Bot';\nimport BotCollection from './components/BotCollection';\nimport YourBotArmy from './components/YourBotArmy';\nimport './App.css';\n\nfunction App() {\n  const [bots, setBots] = useState([]);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  useEffect(() => {\n    async function fetchBots() {\n      try {\n        const response = await fetch('/api/bots');\n        const data = await response.json();\n        setBots(data.bots);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    fetchBots();\n  }, []);\n\n  function enlistBot(bot) {\n    if (!enlistedBots.includes(bot)) {\n      setEnlistedBots([...enlistedBots, bot]);\n    }\n  }\n\n  function releaseBot(bot) {\n    setEnlistedBots(enlistedBots.filter((enlistedBot) => enlistedBot !== bot));\n  }\n\n  async function dischargeBot(bot) {\n    try {\n      await fetch(`/api/bots/${bot.id}`, { method: 'DELETE' });\n      setBots(bots.filter((currentBot) => currentBot !== bot));\n      setEnlistedBots(enlistedBots.filter((enlistedBot) => enlistedBot !== bot));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Bot Army</h1>\n      <div className=\"bot-collection-container\">\n        <h2>Bot Collection</h2>\n        <BotCollection bots={bots} enlistBot={enlistBot} />\n      </div>\n      <div className=\"your-bot-army-container\">\n        <h2>Your Bot Army</h2>\n        <YourBotArmy enlistedBots={enlistedBots} releaseBot={releaseBot} dischargeBot={dischargeBot} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
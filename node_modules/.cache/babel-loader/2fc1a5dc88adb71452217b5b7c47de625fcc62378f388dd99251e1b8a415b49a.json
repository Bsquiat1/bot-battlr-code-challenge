{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport BotsCollection from \"./BotsCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\nimport botsData from \"./botsData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [bots, setBots] = useState(botsData);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n  const handleBotSelect = bot => {\n    setSelectedBot(bot);\n  };\n  const handleEnlistBot = bot => {\n    setEnlistedBots([...enlistedBots, bot]);\n    setBots(bots.filter(b => b.id !== bot.id));\n    setSelectedBot(null);\n  };\n  const handleReturnToCollection = () => {\n    setSelectedBot(null);\n  };\n  const handleSort = param => {\n    const sortedBots = bots.slice().sort((a, b) => b[param] - a[param]);\n    setBots(sortedBots);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [selectedBot ? /*#__PURE__*/_jsxDEV(BotSpecs, {\n      bot: selectedBot,\n      onEnlist: handleEnlistBot,\n      onReturn: handleReturnToCollection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collection-container\",\n      children: [/*#__PURE__*/_jsxDEV(SortBar, {\n        handleSort: handleSort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BotsCollection, {\n        bots: bots,\n        onBotSelect: handleBotSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"enlisted-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Bot Army\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: enlistedBots.map(bot => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: bot.name\n        }, bot.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pa+Cz+azd3TbGtylm3u2bS5AWxg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BotsCollection","BotSpecs","SortBar","botsData","jsxDEV","_jsxDEV","App","_s","bots","setBots","selectedBot","setSelectedBot","enlistedBots","setEnlistedBots","handleBotSelect","bot","handleEnlistBot","filter","b","id","handleReturnToCollection","handleSort","param","sortedBots","slice","sort","a","className","children","onEnlist","onReturn","fileName","_jsxFileName","lineNumber","columnNumber","onBotSelect","map","name","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase2/bot-battlr-code-challenge/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BotsCollection from \"./BotsCollection\";\nimport BotSpecs from \"./BotSpecs\";\nimport SortBar from \"./SortBar\";\nimport botsData from \"./botsData\";\n\nconst App = () => {\n  const [bots, setBots] = useState(botsData);\n  const [selectedBot, setSelectedBot] = useState(null);\n  const [enlistedBots, setEnlistedBots] = useState([]);\n\n  const handleBotSelect = (bot) => {\n    setSelectedBot(bot);\n  };\n\n  const handleEnlistBot = (bot) => {\n    setEnlistedBots([...enlistedBots, bot]);\n    setBots(bots.filter((b) => b.id !== bot.id));\n    setSelectedBot(null);\n  };\n\n  const handleReturnToCollection = () => {\n    setSelectedBot(null);\n  };\n\n  const handleSort = (param) => {\n    const sortedBots = bots.slice().sort((a, b) => b[param] - a[param]);\n    setBots(sortedBots);\n  };\n\n  return (\n    <div className=\"app-container\">\n      {selectedBot ? (\n        <BotSpecs\n          bot={selectedBot}\n          onEnlist={handleEnlistBot}\n          onReturn={handleReturnToCollection}\n        />\n      ) : (\n        <div className=\"collection-container\">\n          <SortBar handleSort={handleSort} />\n          <BotsCollection bots={bots} onBotSelect={handleBotSelect} />\n        </div>\n      )}\n      <div className=\"enlisted-container\">\n        <h2>Your Bot Army</h2>\n        <ul>\n          {enlistedBots.map((bot) => (\n            <li key={bot.id}>{bot.name}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}